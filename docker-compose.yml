version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx_configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_configs/conf.d:/etc/nginx/conf.d:ro
      - ./certs:/etc/nginx/certs:ro
    env_file:
      - .env
    depends_on:
      - bot
    networks:
      - app-network

  worker:
    build: .
    environment:
      - API_TOKEN=${API_TOKEN}
      - REDIS_URL=${REDIS_URL}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - WEBHOOK_PORT=${WEBHOOK_PORT}
      - WEBSERVER_HOST=${WEBSERVER_HOST}
      - WEBSERVER_PORT=${WEBSERVER_PORT}
      - MODE=${MODE}
    env_file:
      - .env
    volumes:
      - ./uploads:${UPLOAD_DIR}
      - ./result:${RESULT_FOLDER}
    depends_on:
      - redis
      - bot
    command: rq worker-pool --url ${REDIS_URL} -n 3
    networks:
      - app-network

  bot:
    build: .
    environment:
      - API_TOKEN=${API_TOKEN}
      - REDIS_URL=${REDIS_URL}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - WEBSERVER_HOST=${WEBSERVER_HOST}
      - WEBSERVER_PORT=${WEBSERVER_PORT}
      - MODE=${MODE}
    volumes:
      - ./uploads:${UPLOAD_DIR}
      - ./result:${RESULT_FOLDER}
      - ./certs:/etc/nginx/certs:ro
    command: python3 bot.py --mode ${MODE} --host ${WEBSERVER_HOST} --port ${WEBSERVER_PORT} --token ${API_TOKEN} --secret ${SECRET_TOKEN} --redis_url ${REDIS_URL} --webhook_host ${WEBHOOK_HOST} --webhook_port ${WEBHOOK_PORT} --webhook_path ${WEBHOOK_PATH} --upload_dir ${UPLOAD_DIR} --result_folder ${RESULT_FOLDER}
    ports:
      - "8082:${WEBSERVER_PORT}"
    depends_on:
      - redis
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${WEBHOOK_HOST}/health_check"
        ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: on-failure:health
    networks:
      - app-network

  redis:
    image: redis:latest
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
